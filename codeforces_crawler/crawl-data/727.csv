submit_id,user_name,code,problem,lang,verdict,contest_id
76854375,liuyuhao,"['#include <stdio.h>\r\nint main(){\r\n\tint n,m;\r\n\tint i=1;\r\n\tint f[1000];\r\n\tf[0]=m;\r\n\tscanf(""%d%d"",&n,&m);\r\n\tint m1=m;\r\nwhile(m!=n){\r\n\t\tif(m%10==1){\r\n\t\t\tm/=10;\r\n\t\t\tf[i]=m;\r\n\t\t\ti++;\r\n\t\t}\r\n\t\telse if(m%2==0){\r\n\t\t\tm/=2;\r\n\t\t\tf[i]=m;\r\n\t\t\ti++;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tprintf(""NO"");\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tif(m==0){\r\n\t\tprintf(""NO"");\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\r\n\t}\r\n\tprintf(""YES\\n%d\\n"",i);\r\n\tfor(int j=i-1;j>0;j--){\r\n\t\tprintf(""%d "",f[j]);\r\n\t}\r\n\tprintf(""%d"",m1);\r\n\t\r\n}']",A - Transformation: from A to B,GNU C11,OK,727
76490876,qbufan,"['//  \r\n#include ""stdio.h""\r\n#include ""stdlib.h""\r\nlong long int a,b,seq[100];\r\nvoid dfs(int i, long long int x)\r\n{\r\n\tint j;\r\n\tif(x>b)\r\n\t\treturn;\r\n\tif(x==b)\r\n\t{\r\n\t\tprintf(""YES\\n"");\r\n\t\tprintf(""%d\\n"",i);\r\n\t\tfor(j=0;j<i;j++)\r\n\t\t\tprintf(""%lld "",seq[j]);\r\n\t\texit(0);\r\n\t}\r\n\tseq[i] = 2*x;\r\n\tdfs(i+1, seq[i]);\t\r\n\tseq[i] = 10*x + 1;\r\n\tdfs(i+1, seq[i]);\t\t\r\n}\r\nint main()\r\n{\r\n\tscanf(""%lld%lld"",&a,&b);\r\n\tseq[0] = a;\r\n\tdfs(1,a);\r\n\tprintf(""NO""); \r\n} \r\n']",A - Transformation: from A to B,GNU C11,OK,727
76490226,qbufan,"['//  \r\n#include ""stdio.h""\r\n#include ""stdlib.h""\r\nint a,b,seq[100],flag=0;\r\nvoid dfs(int i, int x)\r\n{\r\n\tint j;\r\n\tif(x>b)\r\n\t\treturn;\r\n\tif(x==b)\r\n\t{\r\n\t\tprintf(""YES\\n"");\r\n\t\tprintf(""%d\\n"",i);\r\n\t\tfor(j=0;j<i;j++)\r\n\t\t\tprintf(""%d "",seq[j]);\r\n\t\texit(0);\r\n\t}\r\n\tseq[i] = 2*x;\r\n\tdfs(i+1, seq[i]);\t\r\n\tseq[i] = 10*x + 1;\r\n\tdfs(i+1, seq[i]);\t\t\r\n}\r\nint main()\r\n{\r\n\tscanf(""%d%d"",&a,&b);\r\n\tseq[0] = a;\r\n\tdfs(1,a);\r\n\tprintf(""NO""); \r\n} \r\n']",A - Transformation: from A to B,GNU C11,RUNTIME_ERROR,727
69213051,santiago_acevedo,"['#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct list {\n    struct list * next;\n    int n;\n} List;\n\ntypedef struct edge {\n    struct edge * next;\n    int to;\n    int weight;\n} Edge;\n\ntypedef struct graph {\n    int size;\n    Edge * nodes[];\n} Graph;\n\nvoid add_to_list (List ** base, int n) {\n    List * list = (List *) malloc(sizeof(List));\n    list->n = n;\n    list->next = *base;\n    (*base) = list;\n}\n\nint list_length (List * list) {\n    int i = 0;\n    while (list != NULL) {\n        i++;\n        list = list->next;\n    }\n    return i;\n}\n\nvoid delete_list (List * list) {\n    while (list != NULL) {\n        List * ptr = list;\n        list = list->next;\n        free(ptr);\n    }\n}\n\nGraph * new_graph_ptr(int size) {\n    Graph * graph = (Graph *) malloc(sizeof(Graph) + size * sizeof(Edge *));\n    graph->size = size;\n    for (int i = 0; i < size; i++)\n        graph->nodes[i] = NULL;\n    return graph;\n}\n\nvoid add_edge(Graph * graph, int from, int to, int weight) {\n    Edge * edge = (Edge *) malloc(sizeof(Edge));\n    edge->to = to;\n    edge->weight = weight;\n    edge->next = graph->nodes[from];\n    graph->nodes[from] = edge;\n}\n\nvoid add_edges(Graph * graph, int from, int to, int weight) {\n    add_edge(graph, from, to, weight);\n    add_edge(graph, to, from, weight);\n}\n\nvoid delete_graph(Graph * graph) {\n    int size = graph->size;\n    for (int i = 0; i < size; i++) {\n        Edge * edge = graph->nodes[i];\n        while (edge != NULL) {\n            Edge * ptr = edge;\n            edge = edge->next;\n            free(ptr);\n        }\n    }\n    free(graph);\n}\n\nint main (void) {\n    int a, b;\n    scanf(""%d %d"", &a, &b);\n    \n    List * list = NULL;\n    add_to_list(&list, b);\n    while (b > a) {\n        if ((b&1) == 0) {\n            b >>= 1;\n            add_to_list(&list, b);\n        } else if (b%10 == 1) {\n            b /= 10;\n            add_to_list(&list, b);\n        } else {\n            printf(""NO\\n"");\n            free(list);\n            return 0;\n        }\n    }\n    if (a == b) {\n        printf(""YES\\n"");\n        printf(""%d"", list_length(list));\n        printf(""%d"", list->n);\n        List * ptr = list->next;\n        while (ptr != NULL) {\n            printf("" %d"", ptr->n);\n            ptr = ptr->next;\n        }\n        printf(""\\n"");\n    } else {\n        printf(""NO\\n"");\n    }\n    free(list);\n    return 0;\n}\n']",A - Transformation: from A to B,GNU C11,WRONG_ANSWER,727
69213074,santiago_acevedo,"['#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct list {\n    struct list * next;\n    int n;\n} List;\n\ntypedef struct edge {\n    struct edge * next;\n    int to;\n    int weight;\n} Edge;\n\ntypedef struct graph {\n    int size;\n    Edge * nodes[];\n} Graph;\n\nvoid add_to_list (List ** base, int n) {\n    List * list = (List *) malloc(sizeof(List));\n    list->n = n;\n    list->next = *base;\n    (*base) = list;\n}\n\nint list_length (List * list) {\n    int i = 0;\n    while (list != NULL) {\n        i++;\n        list = list->next;\n    }\n    return i;\n}\n\nvoid delete_list (List * list) {\n    while (list != NULL) {\n        List * ptr = list;\n        list = list->next;\n        free(ptr);\n    }\n}\n\nGraph * new_graph_ptr(int size) {\n    Graph * graph = (Graph *) malloc(sizeof(Graph) + size * sizeof(Edge *));\n    graph->size = size;\n    for (int i = 0; i < size; i++)\n        graph->nodes[i] = NULL;\n    return graph;\n}\n\nvoid add_edge(Graph * graph, int from, int to, int weight) {\n    Edge * edge = (Edge *) malloc(sizeof(Edge));\n    edge->to = to;\n    edge->weight = weight;\n    edge->next = graph->nodes[from];\n    graph->nodes[from] = edge;\n}\n\nvoid add_edges(Graph * graph, int from, int to, int weight) {\n    add_edge(graph, from, to, weight);\n    add_edge(graph, to, from, weight);\n}\n\nvoid delete_graph(Graph * graph) {\n    int size = graph->size;\n    for (int i = 0; i < size; i++) {\n        Edge * edge = graph->nodes[i];\n        while (edge != NULL) {\n            Edge * ptr = edge;\n            edge = edge->next;\n            free(ptr);\n        }\n    }\n    free(graph);\n}\n\nint main (void) {\n    int a, b;\n    scanf(""%d %d"", &a, &b);\n    \n    List * list = NULL;\n    add_to_list(&list, b);\n    while (b > a) {\n        if ((b&1) == 0) {\n            b >>= 1;\n            add_to_list(&list, b);\n        } else if (b%10 == 1) {\n            b /= 10;\n            add_to_list(&list, b);\n        } else {\n            printf(""NO\\n"");\n            free(list);\n            return 0;\n        }\n    }\n    if (a == b) {\n        printf(""YES\\n"");\n        printf(""%d\\n"", list_length(list));\n        printf(""%d"", list->n);\n        List * ptr = list->next;\n        while (ptr != NULL) {\n            printf("" %d"", ptr->n);\n            ptr = ptr->next;\n        }\n        printf(""\\n"");\n    } else {\n        printf(""NO\\n"");\n    }\n    free(list);\n    return 0;\n}\n']",A - Transformation: from A to B,GNU C11,OK,727
69152155,javs98,[],A - Transformation: from A to B,GNU C11,RUNTIME_ERROR,727
69152121,javs98,"['#include <stdio.h>\r\n\r\nint resul[999999];\r\nint a,b,p;\r\nint respu(int x);\r\nint main(){\r\n\tint res;\r\n\tscanf(""%d %d"",&a,&b);\r\n\tresul[0]=a;\r\n\tres=respu(1);\r\n\tif(res){\r\n\t\tprintf(""SI\\n%d\\n"",p);\r\n\t\tfor(int i=0;i<p;i++){\r\n\t\t\tprintf(""%d "",resul[i]);\r\n\t\t}\r\n\t}\r\n\r\n\telse printf(""NO"");\r\n}\r\n\r\nint respu(int x){\r\n\tif(resul[x-1]==b){\r\n\t\tif(x>p) p=x;\r\n\t\treturn 1;\r\n\t}else if(resul[x-1]<b){\r\n\t\tresul[x]=2*resul[x-1];\r\n\t\tif(respu(x+1)) return 1;\r\n\t\telse {\r\n\t\t\tresul[x]=(10*resul[x-1])+1;\r\n\t\t\tif(respu(x+1)) return 1;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}']",A - Transformation: from A to B,GNU C11,WRONG_ANSWER,727
69152524,javs98,"['#include <stdio.h>\r\n\r\nlong long resul[99999999];\r\nint a,b,p;\r\nint respu(int x);\r\nint main(){\r\n\tint res;\r\n\tscanf(""%d %d"",&a,&b);\r\n\tresul[0]=a;\r\n\tres=respu(1);\r\n\tif(res){\r\n\t\tprintf(""YES\\n%d\\n"",p);\r\n\t\tfor(int i=0;i<p;i++){\r\n\t\t\tprintf(""%d "",resul[i]);\r\n\t\t}\r\n\t}\r\n\r\n\telse printf(""NO"");\r\n}\r\n\r\nint respu(int x){\r\n\tif(resul[x-1]==b){\r\n\t\tif(x>p) p=x;\r\n\t\treturn 1;\r\n\t}else if(resul[x-1]<b){\r\n\t\tresul[x]=2*resul[x-1];\r\n\t\tif(respu(x+1)) return 1;\r\n\t\telse {\r\n\t\t\tresul[x]=(10*resul[x-1])+1;\r\n\t\t\tif(respu(x+1)) return 1;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}']",A - Transformation: from A to B,GNU C11,MEMORY_LIMIT_EXCEEDED,727
69001183,mfidabel,"['#include <stdio.h>\n\nint sePuedeArriba(long int a, long int b);\nint sePuedeAbajo(long int a, long int b, int pasos);\n\nint main(void) {\n    long int a,b;\n    scanf(""%ld %ld"", &a, &b);\n    if (sePuedeAbajo(a,b, 2) == 0) printf(""NO"");\n    return 0;\n}\n\nint sePuedeAbajo(long int a, long int b, int pasos){\n    if (b<a) return 0;\n    int aux = 0;\n    //b es par\n    if (b%2==0){\n        if (b/2 == a) {\n            //Encontró\n            printf(""YES\\n"");\n            printf(""%d\\n"", pasos);\n            printf(""%ld %ld "", a, b);\n            return 1;\n        } else {\n            //No encontro por aca\n            aux = sePuedeAbajo(a, b/2, pasos+1);\n        }\n    } \n    //b se puee llevar menos 1\n    if ((b-1)%10 == 0) {\n        if ((b-1)/10 == a){\n            //Encontró\n            printf(""YES\\n"");\n            printf(""%d\\n"", pasos);\n            printf(""%ld %ld "", a, b);\n            return 1;\n        } else if (aux == 0) {\n            aux = aux + sePuedeAbajo(a, (b-1)/10, pasos + 1);\n        }\n    } \n\n    if (aux>0) printf(""%ld "", b);\n\n    return aux;\n\n}\n\nint sePuedeArriba(long int a, long int b){\n    if (a>b) return 0;\n    if (2*a == b) return 1;\n    if ((10*a + 1) == b) return 1;\n    return sePuedeArriba(2*a,b) + sePuedeArriba((10*a+1),b);\n}']",A - Transformation: from A to B,GNU C11,OK,727
69010854,ar1234,"['//Problema 727 A\r\n//Transfomation: from A to B\r\n\r\n#include<stdio.h>\r\n#include<string.h>\r\n\r\nint cosa_recursiva(int a, int b, int c);\r\n\r\nint main() {\r\n\tint a, b; //Enteros a ser ingresados\r\n\r\n\tscanf(""%d %d"",&a, &b);\r\n\r\n\tcosa_recursiva(a,b,1);\r\n}\r\n\r\nint cosa_recursiva(int a, int b, int c) {\r\n\r\n\tif(b==a) {\r\n\t\tprintf(""YES\\n"");\r\n\t\tprintf(""%d\\n"",c);\r\n\t\tprintf(""%d "",b);\r\n\t\treturn 1;\r\n\t} else if (b < a) {\r\n\t\tprintf(""NO"");\r\n\t\treturn 0;\r\n\t} else {\r\n\t\tint Exito;\r\n\t\tif (b%10==1) {\r\n\t\t\tExito = cosa_recursiva(a,(b - 1)/10,c+1);//10*X + 1\r\n\t\t} else {\r\n\t\t\tExito = cosa_recursiva(a,b/2,c+1); //2*X\r\n\t\t}\r\n\t\tif (Exito)\r\n\t\t\tprintf(""%d "",b);\r\n\t}\r\n}\r\n']",A - Transformation: from A to B,GNU C11,WRONG_ANSWER,727
69011243,ar1234,"['//Problema 727 A\r\n//Transfomation: from A to B\r\n\r\n#include<stdio.h>\r\n#include<string.h>\r\n\r\nint cosa_recursiva(int a, int b, int c);\r\n\r\nint main() {\r\n\tint a, b; //Enteros a ser ingresados\r\n\r\n\tscanf(""%d %d"",&a, &b);\r\n\r\n\tcosa_recursiva(a,b,1);\r\n}\r\n\r\nint cosa_recursiva(int a, int b, int c) {\r\n\r\n\tif(b==a) {\r\n\t\tprintf(""YES\\n"");\r\n\t\tprintf(""%d\\n"",c);\r\n\t\tprintf(""%d "",b);\r\n\t\treturn 1;\r\n\t} else if (b < a || (b%2!=0 && b%10!=1)) {\r\n\t\tprintf(""NO"");\r\n\t\treturn 0;\r\n\t} else {\r\n\t\tint Exito = 0;\r\n\t\tif (b%10==1) {\r\n\t\t\tExito = cosa_recursiva(a,(b - 1)/10,c+1);//10*X + 1\r\n\t\t} else{\r\n\t\t\tExito = cosa_recursiva(a,b/2,c+1); //2*X\r\n\t\t}\r\n\t\tif (Exito)\r\n\t\t\tprintf(""%d "",b);\r\n\t}\r\n}\r\n']",A - Transformation: from A to B,GNU C11,WRONG_ANSWER,727
69011530,ar1234,"['//Problema 727 A\r\n//Transfomation: from A to B\r\n\r\n#include<stdio.h>\r\n\r\nint cosa_recursiva(int a, int b, int c);\r\n\r\nint main() {\r\n\tint a, b; \r\n\tscanf(""%d %d"",&a, &b);\r\n\tcosa_recursiva(a,b,1);\r\n}\r\n\r\nint cosa_recursiva(int a, int b, int c) {\r\n\tif(b==a) {\r\n\t\tprintf(""YES\\n"");\r\n\t\tprintf(""%d\\n"",c);\r\n\t\tprintf(""%d "",b);\r\n\t\treturn 1;\r\n\t} else if (b < a || (b%2!=0 && b%10!=1)) {\r\n\t\tprintf(""NO"");\r\n\t\treturn 0;\r\n\t} else {\r\n\t\tint Exito = 0;\r\n\t\tif (b%10==1) {\r\n\t\t\tExito = cosa_recursiva(a,(b - 1)/10,c+1);//10*X + 1\r\n\t\t} else{\r\n\t\t\tExito = cosa_recursiva(a,b/2,c+1); //2*X\r\n\t\t}\r\n\t\tif (Exito)\r\n\t\t\tprintf(""%d "",b);\r\n\t}\r\n}\r\n']",A - Transformation: from A to B,GNU C11,WRONG_ANSWER,727
69011383,ar1234,"['//Problema 727 A\r\n//Transfomation: from A to B\r\n\r\n#include<stdio.h>\r\n\r\nint cosa_recursiva(int a, int b, int c);\r\n\r\nint main() {\r\n\tint a, b; //Enteros a ser ingresados\r\n\r\n\tscanf(""%d %d"",&a, &b);\r\n\r\n\tcosa_recursiva(a,b,1);\r\n}\r\n\r\nint cosa_recursiva(int a, int b, int c) {\r\n\r\n\tif(b==a) {\r\n\t\tprintf(""YES\\n"");\r\n\t\tprintf(""%d\\n"",c);\r\n\t\tprintf(""%d "",b);\r\n\t\treturn 1;\r\n\t} else if (b < a || (b%2!=0 && b%10!=1)) {\r\n\t\tprintf(""NO"");\r\n\t\treturn 0;\r\n\t} else {\r\n\t\tint Exito = 0;\r\n\t\tif (b%10==1) {\r\n\t\t\tExito = cosa_recursiva(a,(b - 1)/10,c+1);//10*X + 1\r\n\t\t} else{\r\n\t\t\tExito = cosa_recursiva(a,b/2,c+1); //2*X\r\n\t\t}\r\n\t\tif (Exito)\r\n\t\t\tprintf(""%d "",b);\r\n\t}\r\n}\r\n']",A - Transformation: from A to B,GNU C11,WRONG_ANSWER,727
69152583,javs98,[],A - Transformation: from A to B,GNU C11,OK,727
69011780,ar1234,"['//Problema 727 A\r\n//Transfomation: from A to B\r\n \r\n#include<stdio.h>\r\n \r\nint cosa_recursiva(int a, int b, int c);\r\n \r\nint main() {\r\n\tint a, b; \r\n\tscanf(""%d %d"",&a, &b);\r\n\tcosa_recursiva(a,b,1);\r\n}\r\n \r\nint cosa_recursiva(int a, int b, int c) {\r\n\tif(b==a) {\r\n\t\tprintf(""YES\\n"");\r\n\t\tprintf(""%d\\n"",c);\r\n\t\tprintf(""%d "",b);\r\n\t\treturn 1;\r\n\t} else if (b < a || (b%2!=0 && b%10!=1)) {\r\n\t\tprintf(""NO"");\r\n\t\treturn 0;\r\n\t} else {\r\n\t\tint Exito = 0;\r\n\t\tif (b%10==1) {\r\n\t\t\tExito = cosa_recursiva(a,(b - 1)/10,c+1);//10*X + 1\r\n\t\t} else{\r\n\t\t\tExito = cosa_recursiva(a,b/2,c+1); //2*X\r\n\t\t}\r\n\t\tif (Exito)\r\n\t\t\tprintf(""%d "",b);\r\n\t}\r\n}\r\n']",A - Transformation: from A to B,GNU C11,WRONG_ANSWER,727
69212974,santiago_acevedo,"['#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct list {\n    struct list * next;\n    int n;\n} List;\n\ntypedef struct edge {\n    struct edge * next;\n    int to;\n    int weight;\n} Edge;\n\ntypedef struct graph {\n    int size;\n    Edge * nodes[];\n} Graph;\n\nvoid add_to_list (List ** base, int n) {\n    List * list = (List *) malloc(sizeof(List));\n    list->n = n;\n    list->next = *base;\n    (*base) = list;\n}\n\nvoid delete_list (List * list) {\n    while (list != NULL) {\n        List * ptr = list;\n        list = list->next;\n        free(ptr);\n    }\n}\n\nGraph * new_graph_ptr(int size) {\n    Graph * graph = (Graph *) malloc(sizeof(Graph) + size * sizeof(Edge *));\n    graph->size = size;\n    for (int i = 0; i < size; i++)\n        graph->nodes[i] = NULL;\n    return graph;\n}\n\nvoid add_edge(Graph * graph, int from, int to, int weight) {\n    Edge * edge = (Edge *) malloc(sizeof(Edge));\n    edge->to = to;\n    edge->weight = weight;\n    edge->next = graph->nodes[from];\n    graph->nodes[from] = edge;\n}\n\nvoid add_edges(Graph * graph, int from, int to, int weight) {\n    add_edge(graph, from, to, weight);\n    add_edge(graph, to, from, weight);\n}\n\nvoid delete_graph(Graph * graph) {\n    int size = graph->size;\n    for (int i = 0; i < size; i++) {\n        Edge * edge = graph->nodes[i];\n        while (edge != NULL) {\n            Edge * ptr = edge;\n            edge = edge->next;\n            free(ptr);\n        }\n    }\n    free(graph);\n}\n\nint main (void) {\n    int a, b;\n    scanf(""%d %d"", &a, &b);\n    \n    List * list = NULL;\n    add_to_list(&list, b);\n    while (b > a) {\n        if ((b&1) == 0) {\n            b >>= 1;\n            add_to_list(&list, b);\n        } else if (b%10 == 1) {\n            b /= 10;\n            add_to_list(&list, b);\n        } else {\n            printf(""NO\\n"");\n            free(list);\n            return 0;\n        }\n    }\n    if (a == b) {\n        printf(""%d"", list->n);\n        List * ptr = list->next;\n        while (ptr != NULL) {\n            printf("" %d"", ptr->n);\n            ptr = ptr->next;\n        }\n        printf(""\\n"");\n    } else {\n        printf(""NO\\n"");\n    }\n    free(list);\n    return 0;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n']",A - Transformation: from A to B,GNU C11,WRONG_ANSWER,727
67454269,vjudge4,"['#include<stdio.h>\nint main()\n{\n   int a , b;\n\n    scanf(""%d %d"",&a , &b);\n    int arr[10000] , i=0 , j=0;\n    arr[i]=b;\n    i=1;\n    while (b>a)\n    {\n        if(b%2==0)\n        {\n            b=b/2;\n        }\n            else\n            {\n                b= b-1;\n                if(b%10 != 0)\n                    break;\n                b=b/10;\n            }\n            arr[i]=b;\n            i++;\n    }\n    int n = i;\n\n     if(b==a)\n    {\n        printf(""YES\\n"");\n        printf(""%d\\n"",n);\n        for(j=n-1;j>=0;j--)\n            printf(""%d "",arr[j]);\n    }\n    else\n        printf(""NO\\n"");\n    return 0;\n}\n\n\t \t\t \t   \t\t \t\t  \t\t \t\t\t\t\t   \t  \t']",A - Transformation: from A to B,GNU C11,OK,727
67453974,Sazzad31415,"['#include<stdio.h>\r\nint main()\r\n{\r\n   int a , b;\r\n\r\n    scanf(""%d %d"",&a , &b);\r\n    int arr[10000] , i=0 , j=0;\r\n    arr[i]=b;\r\n    i=1;\r\n    while (b>a)\r\n    {\r\n        if(b%2==0)\r\n        {\r\n            b=b/2;\r\n        }\r\n            else\r\n            {\r\n\r\n                b=(b-1)/10;\r\n            }\r\n            arr[i]=b;\r\n            i++;\r\n    }\r\n    int n = i;\r\n    if(b<a)\r\n        printf(""NO\\n"");\r\n    else\r\n    {\r\n        printf(""YES\\n"");\r\n        printf(""%d\\n"",n);\r\n        for(j=n-1;j>=0;j--)\r\n            printf(""%d "",arr[j]);\r\n    }\r\n    return 0;\r\n}\r\n']",A - Transformation: from A to B,GNU C11,WRONG_ANSWER,727
67454534,vjudge2,"['#include<stdio.h>\nint main()\n{\n    long int a,b,temp,aa[500001],counter,i=0,k;\n    scanf(""%ld %ld"",&a,&b);\n\n    temp=b;\n    aa[i]=temp;\n    if(a<b){\n    while(temp!=a)\n    {\n        if(temp%2==0)\n        {\n            while(temp%2==0)\n            {\n                temp=temp/2;\n            }\n        }\n        else{\n            temp=(temp-1)/10;\n        }\n        i++;\n        aa[i]=temp;\n        if(temp<a)\n        {\n            break;\n        }\n    }\n\n\n    if(temp==a)\n    {\n        printf(""YES\\n%d\\n"",i+1);\n        for(k=i;k>=0;k--)\n        {\n            printf(""%d "",aa[i]);\n        }\n    }\n    else{\n        printf(""NO"");\n\n    }\n    }\n    else{\n    printf(""NO"");\n    }\n}\n\n      \t \t  \t\t\t \t\t \t\t \t   \t  \t\t']",A - Transformation: from A to B,GNU C11,WRONG_ANSWER,727
67453952,vjudge2,"['#include<stdio.h>\nint main()\n{\n   int a , b;\n\n    scanf(""%d %d"",&a , &b);\n    int arr[10000] , i=0 , j=0;\n    arr[i]=b;\n    i=1;\n    while (b>a)\n    {\n        if(b%2==0)\n        {\n            b=b/2;\n        }\n            else\n            {\n\n                b=(b-1)/10;\n            }\n            arr[i]=b;\n            i++;\n    }\n    int n = i;\n    if(b<a)\n        printf(""NO\\n"");\n    else\n    {\n        printf(""YES\\n"");\n        printf(""%d\\n"",n);\n        for(j=n-1;j>=0;j--)\n            printf(""%d "",arr[j]);\n    }\n    return 0;\n}\n\n\t \t\t\t \t    \t\t  \t   \t \t \t\t\t   \t']",A - Transformation: from A to B,GNU C11,WRONG_ANSWER,727
67453018,Sazzad31415,"['#include<stdio.h>\r\nint main()\r\n{\r\n    long int a , b;\r\n    int i=0 , j=0;\r\n    scanf(""%ld %ld"",&a , &b);\r\n    long int arr[b] , arr2[b];\r\n    arr[i]=b;\r\n    i=1;\r\n    while (b>a)\r\n    {\r\n        if(b%2==0)\r\n        {\r\n            b=b/2;\r\n        }\r\n            else\r\n            {\r\n                b=b-1;\r\n                b=b/10;\r\n            }\r\n            arr[i]=b;\r\n            i++;\r\n        if(b<=a)\r\n            break;\r\n    }\r\n    int n = i;\r\n    if(b<a)\r\n        printf(""NO\\n"");\r\n    else\r\n    {\r\n        printf(""YES\\n"");\r\n        printf(""%d\\n"",n);\r\n        for(j=n-1;j>=0;j--)\r\n            printf(""%ld "",arr[j]);\r\n    }\r\n    return 0;\r\n}\r\n']",A - Transformation: from A to B,GNU C11,RUNTIME_ERROR,727
67452659,vjudge2,[],A - Transformation: from A to B,GNU C11,RUNTIME_ERROR,727
67452750,vjudge3,"['#include<stdio.h>\nint main()\n{\n    long int a , b;\n    int i=0 , j=0;\n    scanf(""%ld %ld"",&a , &b);\n    long int arr[b] , arr2[b];\n    arr[i]=b;\n    i=1;\n    while (b>a)\n    {\n        if(b%2==0)\n        {\n            b=b/2;\n        }\n            else\n            {\n                b=b-1;\n                b=b/10;\n            }\n            arr[i]=b;\n            i++;\n        if(b<=a)\n            break;\n    }\n    int n = i;\n    if(b<a)\n        printf(""NO\\n"");\n    else\n    {\n        printf(""YES\\n"");\n        printf(""%d\\n"",n);\n        for(j=n-1;j>=0;j--)\n            printf(""%ld "",arr[j]);\n    }\n    return 0;\n}\n\n\t  \t \t\t  \t \t\t \t\t\t \t \t   \t \t \t\t\t']",A - Transformation: from A to B,GNU C11,RUNTIME_ERROR,727
66372508,DevJewel,"['#include<stdio.h>\r\n#include<stdlib.h>\r\nint aa[100000], k;\r\n\r\nint main()\r\n{\r\n    int a, b, i;\r\n    scanf(""%d %d"", &a, &b);\r\n    aa[k++]=b;\r\n    while(b>a)\r\n    {\r\n        int d = b%10;\r\n        if(d == 1)\r\n            b /= 10;\r\n        else if(d%2==0)\r\n            b /= 2;\r\n        else\r\n        {\r\n            printf(""NO\\n"");\r\n            return 0;\r\n        }\r\n        aa[k++]=b;\r\n    }\r\n    if(a==b)\r\n    {\r\n        printf(""YES\\n"");\r\n        for(i=k-1; i>=0; i--)\r\n            printf(""%d "",aa[i]);\r\n    }\r\n    else\r\n        printf(""NO\\n"");\r\n\r\n    return 0;\r\n}\r\n']",A - Transformation: from A to B,GNU C11,WRONG_ANSWER,727
66372537,DevJewel,"['#include<stdio.h>\r\n#include<stdlib.h>\r\nint aa[100000], k;\r\n\r\nint main()\r\n{\r\n    int a, b, i;\r\n    scanf(""%d %d"", &a, &b);\r\n    aa[k++]=b;\r\n    while(b>a)\r\n    {\r\n        int d = b%10;\r\n        if(d == 1)\r\n            b /= 10;\r\n        else if(d%2==0)\r\n            b /= 2;\r\n        else\r\n        {\r\n            printf(""NO\\n"");\r\n            return 0;\r\n        }\r\n        aa[k++]=b;\r\n    }\r\n    if(a==b)\r\n    {\r\n        printf(""YES\\n%d\\n"", k);\r\n        for(i=k-1; i>=0; i--)\r\n            printf(""%d "",aa[i]);\r\n    }\r\n    else\r\n        printf(""NO\\n"");\r\n\r\n    return 0;\r\n}\r\n']",A - Transformation: from A to B,GNU C11,OK,727
62073842,Bandekhoda56,[],A - Transformation: from A to B,GNU C11,OK,727
