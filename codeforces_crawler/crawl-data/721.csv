submit_id,user_name,code,problem,lang,verdict,contest_id
78370366,grindelwald.10,"['//#include <bits/stdc++.h>\r\n\r\n//using namespace std;\r\n#include<stdio.h>\r\n#include<math.h>\r\n#include<string.h>\r\n\r\nint main()\r\n{\r\n    int l,i,cnt=0,a[100],j=0,grp=0,n;\r\n    char s[105];\r\n    scanf(""%d"",&n);\r\n    scanf(""%s"",s);\r\n    for(i=0; i<n; i++)\r\n    {\r\n        if(s[i]==\'B\')\r\n        {\r\n            cnt++;\r\n        }\r\n        else\r\n        {\r\n            if(cnt>0)\r\n            {\r\n                a[j]=cnt;\r\n                j++;\r\n                grp++;\r\n            }\r\n            cnt=0;\r\n        }\r\n    }\r\n    if(cnt>0)\r\n    {\r\n        grp++;\r\n        a[j]=cnt;\r\n    }\r\n    else\r\n        j--;\r\n    printf(""%d\\n"",grp);\r\n    if(j>=0)\r\n    {\r\n        for(i=0; i<j; i++)\r\n        {\r\n            printf(""%d "",a[i]);\r\n        }\r\n        printf(""%d\\n"",a[j]);\r\n    }\r\n\r\n    return 0;\r\n}']",A - One-dimensional Japanese Crossword,GNU C11,OK,721
78298286,AB_Turjo,"['#include<stdio.h>\r\nint main()\r\n{\r\n    int n, k=0, i, j=0, count=0, l=0;\r\n    char ara[100];\r\n    scanf(""%d"", &n);\r\n    for(i=0; i<=n; i++){\r\n        scanf(""%c"", &ara[i]);\r\n    }\r\n    for(i=0; i<=n; i++){\r\n        if(ara[i] == \'B\'){\r\n            if(count == 0){\r\n                j++;\r\n            }\r\n            count=1;\r\n            l++;\r\n        }\r\n        else{\r\n            count=0;\r\n            if(l!=0){\r\n                ara[k] = l;\r\n                k++;\r\n            }\r\n            l=0;\r\n        }\r\n        if(count==1 && i==n){\r\n            ara[k++]= l;\r\n        }\r\n    }\r\n    printf(""%d\\n"", j);\r\n    if(j==1 && l==n){\r\n        printf(""%d"", l);\r\n    }\r\n    else{\r\n        for(i=0; i<j; i++){\r\n        printf(""%d "", ara[i]);\r\n    }\r\n    }\r\n\r\n    return 0;\r\n}\r\n']",A - One-dimensional Japanese Crossword,GNU C11,OK,721
78247009,nihar_gupta657,"['#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int i,n,c;\r\n    scanf(""%d"",&n);\r\n    char a[n+2];\r\n    scanf(""%s"",a);\r\n    c=0;\r\n    for(i=0;i<n-1;i++)\r\n    {\r\n        if(a[i]==\'B\' && a[i+1]==\'W\')\r\n        {\r\n            c++;\r\n        }\r\n    }\r\n    if(a[n-1]==\'B\')\r\n    {\r\n        c++;\r\n    }\r\n    printf(""%d\\n"",c);\r\n    c=0;\r\n    for(i=0;i<n;i++)\r\n    {\r\n        if(a[i]==\'B\')\r\n        {\r\n            c++;\r\n        }\r\n        else\r\n        {   if(c!=0)\r\n            {\r\n                printf(""%d "",c);\r\n            }    \r\n            c=0;\r\n        }\r\n    }\r\n    if(c!=0 && a[n-1]==\'B\')\r\n    {\r\n        printf(""%d "",c);\r\n    }\r\n    \r\n}']",A - One-dimensional Japanese Crossword,GNU C11,OK,721
77092245,random_from_vmk,"['#include <stdio.h>\n\nint main() \n{\n\tunsigned n, groups_count = 0, b_count;\n\tint c, fl = 0;\n\tscanf(""%u\\n"", &n);\n\tunsigned a[n];\n\n\tfor (unsigned i = 0; i < n; i++) \n\t{\n\t\tc = getchar();\n\t\tif (c == \'B\')\n\t\t{\n\t\t\tif (!fl)\n\t\t\t{\n\t\t\t\tb_count = 1;\n\t\t\t\tfl = 1;\n\t\t\t\tgroups_count++;\n\t\t\t}\n\t\t\telse\n\t\t\t\tb_count++;\n\t\t}\n\t\tif (c == \'W\') \n\t\t{\n\t\t\tif (fl) \n\t\t\t{\n\t\t\t\ta[groups_count-1] = b_count;\n\t\t\t\tfl = 0;\n\t\t\t}\n\t\t}\n\t}\n\tif (fl) \n\t\ta[groups_count-1] = b_count;\n\n\tprintf(""%u\\n"", groups_count);\n\tfor (unsigned i = 0; i < groups_count-1; i++) \n\t{\n\t\tprintf(""%u "", a[i]);\n\t}\n\tprintf(""%u"", a[groups_count-1]);\n\treturn 0;\n}\n']",A - One-dimensional Japanese Crossword,GNU C11,RUNTIME_ERROR,721
77092542,random_from_vmk,"['#include <stdio.h>\n\nint main() \n{\n\tunsigned n, groups_count = 0, b_count;\n\tint c, fl = 0;\n\tscanf(""%u\\n"", &n);\n\tunsigned a[n];\n\n\tfor (unsigned i = 0; i < n; i++) \n\t{\n\t\tc = getchar();\n\t\tif (c == \'B\')\n\t\t{\n\t\t\tif (!fl)\n\t\t\t{\n\t\t\t\tb_count = 1;\n\t\t\t\tfl = 1;\n\t\t\t\tgroups_count++;\n\t\t\t}\n\t\t\telse\n\t\t\t\tb_count++;\n\t\t}\n\t\tif (c == \'W\') \n\t\t{\n\t\t\tif (fl) \n\t\t\t{\n\t\t\t\ta[groups_count-1] = b_count;\n\t\t\t\tfl = 0;\n\t\t\t}\n\t\t}\n\t}\n\tif (fl) \n\t\ta[groups_count-1] = b_count;\n\t\n\tif (groups_count > 0)\n\t{\n\t\tprintf(""%u\\n"", groups_count);\n\t\tfor (unsigned i = 0; i < groups_count-1; i++) \n\t\t{\n\t\t\tprintf(""%u "", a[i]);\n\t\t}\n\t\tprintf(""%u"", a[groups_count-1]);\n\t}\n\treturn 0;\n}\n']",A - One-dimensional Japanese Crossword,GNU C11,WRONG_ANSWER,721
76314543,adi.badayalya,"['#include<stdio.h>\r\n#include<string.h>\r\n\r\nint main()\r\n{\r\n    int l,i,cnt=0,a[100],j=0,grp=0,n;\r\n    char s[105];\r\n    scanf(""%d"",&n);\r\n    scanf(""%s"",s);\r\n    for(i=0; i<n; i++)\r\n    {\r\n        if(s[i]==\'B\')\r\n        {\r\n            cnt++;\r\n        }\r\n        else\r\n        {\r\n            if(cnt>0)\r\n            {\r\n                a[j]=cnt;\r\n                j++;\r\n                grp++;\r\n            }\r\n            cnt=0;\r\n        }\r\n    }\r\n    if(cnt>0)\r\n    {\r\n        grp++;\r\n        a[j]=cnt;\r\n    }\r\n    else\r\n        j--;\r\n    printf(""%d\\n"",grp);\r\n    if(j>=0)\r\n    {\r\n        for(i=0; i<j; i++)\r\n        {\r\n            printf(""%d "",a[i]);\r\n        }\r\n        printf(""%d\\n"",a[j]);\r\n    }\r\n\r\n    return 0;\r\n}\r\n']",A - One-dimensional Japanese Crossword,GNU C11,OK,721
76211769,samiulmugdha,"['#include <stdio.h>\r\nint main(){\r\n    int num, i, j = 0, boss = 0;\r\n    char line[150];\r\n    int team[150];\r\n    scanf(""%d"", &num);\r\n    scanf(""%s"", line);\r\n    for(i = 0;i < num - 1;i++){\r\n        if(line[i] == \'B\'){\r\n            boss++;\r\n        }\r\n        if(line[i] == \'B\' && line[i + 1] == \'W\'){\r\n            team[j] = boss;\r\n            boss = 0;\r\n            j++;\r\n        }\r\n    }\r\n    if(line[i] == \'B\'){\r\n            boss++;\r\n        team[j] = boss;\r\n        boss = 0;\r\n        j++;\r\n    }\r\n    printf(""%d\\n"", j);\r\n    for(i = 0;i < j;i++){\r\n        printf(""%d "", team[i]);\r\n    }\r\n    return 0;\r\n}']",A - One-dimensional Japanese Crossword,GNU C11,OK,721
76219073,samiulmugdha,"['#include <stdio.h>\r\n#include <string.h>\r\nint main(){\r\n    int in, delay, less = 0, equ = 0, i;\r\n    char line[200];\r\n    scanf(""%d %d"", &in, &delay);\r\n    int len[in + 1];\r\n    in = in + 1;\r\n    for(i = 0;i < in;i++){\r\n        scanf(""%s"", line);\r\n        len[i] = strlen(line);\r\n    }\r\n    int boss = strlen(line);\r\n    for(i = 0;i < in - 1;i++){\r\n        if(len[i] < boss)less++;\r\n        if(len[i] == boss)equ++;\r\n    }\r\n    in = less + 1;\r\n    in = in + (5*((in - 1)/delay));\r\n    printf(""%d "", in);\r\n    in = less + equ;\r\n    in = in + (5*((in - 1)/delay));\r\n    printf(""%d\\n"", in);\r\n    return 0;\r\n}\r\n']",B - Passwords,GNU C11,OK,721
75597028,Era1603,"['#include<stdio.h>\n\nint main()\n{    int n,c,d,i,p;\n    scanf(""%d\\n"",&n);\n    char a[n+2];\n    gets(a);\n    i=0;\n    c=0;\n    while(i<n)\n    {\n    p=0;\n    if(a[i]==\'B\')\n        {\n        c++;\n        while(a[i]==\'B\')\n        {\n        i++;\n        p=1;\n        }\n        }\n    if(p==0)\n    i++;\n    }\n    printf(""%d\\n"",c);\n    i=0;\n    while(i<n)\n    {\n    p=0;\n    d=0;\n    if(a[i]==\'B\')\n   {\n        while(a[i]==\'B\')\n        {\n        d++;\n        i++;\n        p=1;\n        }\n        printf(""%d "",d);\n    }\n    if(p==0)\n    i++;\n    }\n    \n    return 0;\n}']",A - One-dimensional Japanese Crossword,GNU C11,OK,721
75171263,Anil888,"['#include <stdio.h>\r\n#include <string.h>\r\n#define N 100\r\n#define L 100\r\nint main()\r\n{\r\n\tstatic char ss[N][L + 1], s[L + 1];\r\n\tstatic int kk[L + 1];\r\n\tint n, k, i, l, x, min, max;\r\n\r\n\tscanf(""%d%d"", &n, &k);\r\n\tfor (i = 0; i < n; i++) {\r\n\t\tscanf(""%s"", ss[i]);\r\n\t\tkk[(int) strlen(ss[i])]++;\r\n\t}\r\n\tscanf(""%s"", s);\r\n\tmin = 0;\r\n\tx = strlen(s);\r\n\tfor (l = 1; l < x; l++)\r\n\t\tmin += kk[l];\r\n\tmax = min + kk[x];\r\n\tprintf(""%d %d\\n"", min + 1 + (min / k) * 5, max + ((max - 1) / k) * 5);\r\n\treturn 0;\r\n}\r\n']",B - Passwords,GNU C11,OK,721
73914159,patilc125,"['#include <stdio.h>\r\n#include<string.h>\r\nlong long int max(long long int a,long long int b){\r\n    if(a>b){\r\n        return a;\r\n    }\r\n    return b;\r\n}\r\nint cmp(const void *a,const void *b){\r\n    return strlen(a)-strlen(b);\r\n}\r\nint main()\r\n{\r\n   long long int i,j,test,k,m,l,r,flag=0,max=0,n,m1,m2,x,sum=0,ans=0,count;\r\n   char a[101][101];\r\n scanf(""%lld%lld"",&n,&m);\r\n for(i=0;i<n;i++){\r\n     scanf(""%s"",&a[i]);\r\n }\r\n qsort(a,n,101,cmp);\r\n max=strlen(a[n-1]);\r\n for(i=0;i<n-1;i++){\r\n     if(a[i]!="" ""){\r\n     for(j=i+1;j<n;j++){\r\n     if(strlen(a[i])==strlen(a[j]) && strcmp(a[i],a[j])==0 && a[i]!="" "" && a[j]!="" ""){\r\n         strcpy(a[j],"" "");\r\n     }else{\r\n         if(strlen(a[i])!=strlen(a[j]) && a[j]!="" "" && a[i]!="" ""){\r\n             break;\r\n         }\r\n     }\r\n    }\r\n   }\r\n }\r\n sum=0;\r\n count=0;\r\n flag=0;\r\n for(i=0;i<n;i++){\r\n  //   printf(""%s\\n"",a[i]);\r\n     if(strcmp(a[i],"" "")!=0){\r\n         count++;\r\n     }\r\n     if(count==m){\r\n         sum+=5+m;\r\n         count=0;\r\n     }\r\n     if(strlen(a[i])==max && flag==0){\r\n         k=sum+count;\r\n         flag=1;\r\n     }\r\n }\r\n if(count<m){\r\n     sum+=count;\r\n }\r\n printf(""%lld %lld"",k,sum);\r\n    return 0;\r\n}']",B - Passwords,GNU C11,WRONG_ANSWER,721
73848113,Eftekhar_Nahim_CoU14,"['#include <stdio.h>\r\nint main()\r\n{\r\n    int n, i, sum = 0, t=0, d[100];\r\n    char a[101];\r\n    scanf(""%d %s"", &n, a);\r\n    for(i=0; i <= n; i++)\r\n    {\r\n        if(a[ i ] == \'B\')\r\n        {\r\n           sum = sum + 1;\r\n        }\r\n        else if(sum)\r\n        {\r\n            d[t++]=sum;\r\n            sum=0;\r\n        }\r\n    }\r\n    printf(""%d\\n"", t);\r\n    for(i=0; i<t;i++)printf(""%d "", d[ i ]);\r\n    printf("" "");\r\n}\r\n']",A - One-dimensional Japanese Crossword,GNU C11,OK,721
73188386,prince.mishra1384,"['#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int n,r,i,ans=0,j=0,a[100];\r\n    char s[100];\r\n    scanf(""%d"",&n);\r\n    fflush(stdin);\r\n    gets(s);\r\n    while(s[j]!=\'B\'&&j<=n-1)\r\n        j++;\r\n    if(j==n)\r\n    {\r\n        printf(""0"");\r\n        return 0;\r\n    }\r\n    for(i=j;i<n;i++)\r\n    {\r\n        if(s[i]==\'W\')\r\n            {\r\n                a[ans]=i-j;\r\n                ans++;\r\n                if(i==n-1)\r\n                    break;\r\n                j=i;\r\n                while(s[j]!=\'B\')\r\n                {\r\n                    if(j==n-1)\r\n                        break;\r\n                    else\r\n                        j++;\r\n                }\r\n            }\r\n    }\r\n    if(s[n-1]==\'B\')\r\n    {\r\n            a[ans]=n-j;\r\n            ans++;\r\n    }\r\n    printf(""%d\\n"",ans);\r\n    for(int i=0;i<ans;i++)\r\n    printf(""%d "",a[i]);\r\n}\r\n']",A - One-dimensional Japanese Crossword,GNU C11,WRONG_ANSWER,721
73187398,prince.mishra1384,"['#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int n,r,i,ans=0,j=0,a[100];\r\n    char s[100];\r\n    scanf(""%d"",&n);\r\n    fflush(stdin);\r\n    gets(s);\r\n    while(s[j]!=\'B\')\r\n        j++;\r\n    for(i=j+1;i<n;i++)\r\n    {\r\n        if(s[i]==\'W\')\r\n            {\r\n                a[ans]=i-j;\r\n                ans++;\r\n                if(i==n-1)\r\n                    break;\r\n                j=i;\r\n                while(s[j]!=\'B\')\r\n                {\r\n                    if(j==n-1)\r\n                        break;\r\n                    else\r\n                        j++;\r\n                }\r\n            }i=j;\r\n    }\r\n    if(s[i]==\'B\')\r\n    {\r\n            a[ans]=i-j+1;\r\n            ans++;\r\n    }\r\n    printf(""%d\\n"",ans);\r\n    for(int i=0;i<ans;i++)\r\n    printf(""%d "",a[i]);\r\n}\r\n']",A - One-dimensional Japanese Crossword,GNU C11,WRONG_ANSWER,721
72947854,burr4ch,"['#include <stdio.h>\r\n\r\nint len,groups;\r\n\r\nint main()\r\n{\r\n    //freopen (""cf.in"",""r"",stdin);freopen(""cf.out"",""w"",stdout);\r\n    scanf (""%d"",&len);\r\n    char s [len]; int adj [len];\r\n    scanf (""%s"",s);\r\n    int j = 0;\r\n    for (int i=0;i<len;i++)\r\n    {\r\n        if (s[i]==\'B\')\r\n        {\r\n            adj[j] = 1;\r\n            while (s[++i]==\'B\')\r\n            {\r\n                adj[j]++;\r\n            }\r\n            j++;\r\n        }\r\n    }\r\n    printf (""%d\\n"",j);\r\n    for (int i;i<j;i++)\r\n    {\r\n        printf (""%d "",adj[i]);\r\n    }\r\n}']",A - One-dimensional Japanese Crossword,GNU C11,OK,721
72285001,nani310,"['#include<stdio.h>\r\n#include<math.h>\r\n#include<string.h>\r\n\r\n\r\nint main(){\r\n     int n,k=0,p=0,i,k2;\r\n     scanf(""%d"",&n);\r\n     char s1[n+1];\r\n     scanf(""%s"",s1);\r\n     int a[n+1];\r\n     for(i=0;i<n;i++){\r\n         k=0;\r\n         while(s1[i]==\'B\'){\r\n             i++;\r\n             k++;\r\n             if(s1[i]==\'B\'){\r\n                 k++;\r\n                 i++;\r\n             }\r\n         }\r\n         if(k>0){\r\n             p++;\r\n             a[p]=k;\r\n         }\r\n     }\r\n     printf(""%d\\n"",p);\r\n     for(i=1;i<=p;i++){\r\n         printf(""%d "",a[i]);\r\n     }\r\n}']",A - One-dimensional Japanese Crossword,GNU C11,OK,721
70812807,0xbaadf00d,"['#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\n#define PASSWORD_LENGTH_LIMIT 100 + 1\r\n#define TYPING_SPEED 1\r\n#define WAIT_TIME 5\r\n\r\nint compare_passwords_by_length(const void* PASSWORD1, const void* PASSWORD2)\r\n{\r\n  if (strlen(PASSWORD1) < strlen(PASSWORD2))\r\n    return -1;\r\n  else if (strlen(PASSWORD1) == strlen(PASSWORD2))\r\n    return 0;\r\n  else\r\n    return 1;\r\n}\r\n\r\n\r\nint calculate_best_case(const char PASSWORDS[][PASSWORD_LENGTH_LIMIT],\r\n                        const int NUMBER_OF_PASSWORDS,\r\n                        const char* const CODEHORSES_PASSWORD,\r\n                        const int LIMIT_OF_FAILED_TRIES)\r\n{\r\n  int best_case = TYPING_SPEED;\r\n\r\n  if (strlen(CODEHORSES_PASSWORD) != strlen(PASSWORDS[0]))\r\n  {\r\n    int number_of_failed_tries = 1;\r\n    if (number_of_failed_tries % LIMIT_OF_FAILED_TRIES == 0)\r\n      best_case += WAIT_TIME;\r\n\r\n    int i = 1;\r\n    while (i < NUMBER_OF_PASSWORDS &&\r\n           strlen(CODEHORSES_PASSWORD) != strlen(PASSWORDS[i]))\r\n    {\r\n      best_case += TYPING_SPEED;\r\n      ++number_of_failed_tries;\r\n      if (number_of_failed_tries % LIMIT_OF_FAILED_TRIES == 0)\r\n        best_case += WAIT_TIME;\r\n\r\n      ++i;\r\n    }\r\n\r\n    best_case += TYPING_SPEED;\r\n  }\r\n\r\n  return best_case;\r\n}\r\n\r\n\r\nint calculate_worst_case(const char PASSWORDS[][PASSWORD_LENGTH_LIMIT],\r\n                         const int NUMBER_OF_PASSWORDS,\r\n                         const char* const CODEHORSES_PASSWORD,\r\n                         const int LIMIT_OF_FAILED_TRIES)\r\n{\r\n  int worst_case = 0;\r\n  int number_of_failed_tries = 0;\r\n  int i = 0;\r\n\r\n  while (i < NUMBER_OF_PASSWORDS &&\r\n         strlen(CODEHORSES_PASSWORD) >= strlen(PASSWORDS[i]))\r\n  {\r\n    worst_case += TYPING_SPEED;\r\n    ++number_of_failed_tries;\r\n    if (number_of_failed_tries % LIMIT_OF_FAILED_TRIES == 0)\r\n      worst_case += WAIT_TIME;\r\n\r\n    ++i;\r\n  }\r\n\r\n  return worst_case;\r\n}\r\n\r\n\r\nint main(void)\r\n{\r\n  int number_of_passwords;\r\n  int limit_of_failed_tries;\r\n  scanf(""%d%d"", &number_of_passwords, &limit_of_failed_tries);\r\n\r\n  char passwords[number_of_passwords][PASSWORD_LENGTH_LIMIT];\r\n\r\n  for (int i = 0; i < number_of_passwords; ++i)\r\n    scanf(""%s"", passwords[i]);\r\n\r\n  qsort(passwords, number_of_passwords, PASSWORD_LENGTH_LIMIT,\r\n        compare_passwords_by_length);\r\n\r\n  char codehorses_password[PASSWORD_LENGTH_LIMIT];\r\n  scanf(""%s"", codehorses_password);\r\n\r\n  const int BEST_CASE =\r\n      calculate_best_case(passwords, number_of_passwords, codehorses_password,\r\n                          limit_of_failed_tries);\r\n\r\n  const int WORST_CASE =\r\n      calculate_worst_case(passwords, number_of_passwords, codehorses_password,\r\n                           limit_of_failed_tries);\r\n\r\n  printf(""%d %d"", BEST_CASE, WORST_CASE);\r\n\r\n  return 0;\r\n}\r\n']",B - Passwords,GNU C11,WRONG_ANSWER,721
70813157,0xbaadf00d,"['#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\n#define PASSWORD_LENGTH_LIMIT 100 + 1\r\n#define TYPING_SPEED 1\r\n#define WAIT_TIME 5\r\n\r\nint compare_passwords_by_length(const void* PASSWORD1, const void* PASSWORD2)\r\n{\r\n  if (strlen(PASSWORD1) < strlen(PASSWORD2))\r\n    return -1;\r\n  else if (strlen(PASSWORD1) == strlen(PASSWORD2))\r\n    return 0;\r\n  else\r\n    return 1;\r\n}\r\n\r\n\r\nint calculate_best_case(const char PASSWORDS[][PASSWORD_LENGTH_LIMIT],\r\n                        const int NUMBER_OF_PASSWORDS,\r\n                        const char* const CODEHORSES_PASSWORD,\r\n                        const int LIMIT_OF_FAILED_TRIES)\r\n{\r\n  int best_case = TYPING_SPEED;\r\n\r\n  if (strlen(CODEHORSES_PASSWORD) != strlen(PASSWORDS[0]))\r\n  {\r\n    int number_of_failed_tries = 1;\r\n    if (number_of_failed_tries % LIMIT_OF_FAILED_TRIES == 0)\r\n      best_case += WAIT_TIME;\r\n\r\n    int i = 1;\r\n    while (i < NUMBER_OF_PASSWORDS &&\r\n           strlen(CODEHORSES_PASSWORD) != strlen(PASSWORDS[i]))\r\n    {\r\n      best_case += TYPING_SPEED;\r\n      ++number_of_failed_tries;\r\n      if (number_of_failed_tries % LIMIT_OF_FAILED_TRIES == 0)\r\n        best_case += WAIT_TIME;\r\n\r\n      ++i;\r\n    }\r\n\r\n    best_case += TYPING_SPEED;\r\n  }\r\n\r\n  return best_case;\r\n}\r\n\r\n\r\nint calculate_worst_case(const char PASSWORDS[][PASSWORD_LENGTH_LIMIT],\r\n                         const int NUMBER_OF_PASSWORDS,\r\n                         const char* const CODEHORSES_PASSWORD,\r\n                         const int LIMIT_OF_FAILED_TRIES)\r\n{\r\n  int worst_case = 0;\r\n  int number_of_failed_tries = 0;\r\n  int i = 0;\r\n\r\n  while (i < NUMBER_OF_PASSWORDS &&\r\n         strlen(CODEHORSES_PASSWORD) >= strlen(PASSWORDS[i]))\r\n  {\r\n    if (strcmp(CODEHORSES_PASSWORD, PASSWORDS[i]) != 0)\r\n    {\r\n      ++number_of_failed_tries;\r\n      if (number_of_failed_tries % LIMIT_OF_FAILED_TRIES == 0)\r\n        worst_case += WAIT_TIME;\r\n    }\r\n\r\n    worst_case += TYPING_SPEED;\r\n    ++i;\r\n  }\r\n\r\n  return worst_case;\r\n}\r\n\r\n\r\nint main(void)\r\n{\r\n  int number_of_passwords;\r\n  int limit_of_failed_tries;\r\n  scanf(""%d%d"", &number_of_passwords, &limit_of_failed_tries);\r\n\r\n  char passwords[number_of_passwords][PASSWORD_LENGTH_LIMIT];\r\n\r\n  for (int i = 0; i < number_of_passwords; ++i)\r\n    scanf(""%s"", passwords[i]);\r\n\r\n  qsort(passwords, number_of_passwords, PASSWORD_LENGTH_LIMIT,\r\n        compare_passwords_by_length);\r\n\r\n  char codehorses_password[PASSWORD_LENGTH_LIMIT];\r\n  scanf(""%s"", codehorses_password);\r\n\r\n  const int BEST_CASE =\r\n      calculate_best_case(passwords, number_of_passwords, codehorses_password,\r\n                          limit_of_failed_tries);\r\n\r\n  const int WORST_CASE =\r\n      calculate_worst_case(passwords, number_of_passwords, codehorses_password,\r\n                           limit_of_failed_tries);\r\n\r\n  printf(""%d %d"", BEST_CASE, WORST_CASE);\r\n\r\n  return 0;\r\n}\r\n']",B - Passwords,GNU C11,OK,721
70592009,MAMUN_1805028,"['#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n     int minco=1,maxco=0,rand=0,n,k,min,max;\r\n\tint i,j,t;\r\n\tscanf(""%d %d"",&n,&k);\r\n\r\n\tchar a[n+1][101];\r\n\tint len[n+1];\r\n\r\n\tfor(i=0;i<n+1;i++)\r\n\t\tscanf(""%s"",a[i]);\r\n\r\n\tfor(i=0;i<n+1;i++)\r\n\t{\r\n\t\tlen[i]=strlen(a[i]);\r\n\t}\r\n\r\n\tfor(i=0;i<n-1;i++)\r\n\t{\r\n          for(j=0;j<n-i-1;j++)\r\n\t\t{\r\n\t\t\tif(len[j+1]<len[j])\r\n\t\t\t{\r\n\t\t\t\tt=len[j];\r\n\t\t\t\tlen[j]=len[j+1];\r\n\t\t\t\tlen[j+1]=t;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t     if(!(strcmp(a[i],a[n])))rand++;\r\n\r\n\t\tif(len[i]<len[n])minco++;\r\n\t}\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tif(a[i]<=a[n])maxco++;\r\n\t}\r\n\tmaxco=maxco-(rand-1);\r\n\r\n\tmin=minco+((minco-1)/k)*5;\r\n\tmax=maxco+((maxco-1)/k)*5;\r\n\r\n\tprintf(""%d %d"",min,max);\r\n}\r\n']",B - Passwords,GNU C11,WRONG_ANSWER,721
70592388,MAMUN_1805028,"['#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n     int minco=1,maxco=0,rand=0,n,k,min,max;\r\n\tint i,j,t;\r\n\tscanf(""%d %d"",&n,&k);\r\n\r\n\tchar a[n+1][101];\r\n\tint len[n+1];\r\n\r\n\tfor(i=0;i<n+1;i++)\r\n\t\tscanf(""%s"",a[i]);\r\n\r\n\tfor(i=0;i<n+1;i++)\r\n\t{\r\n\t\tlen[i]=strlen(a[i]);\r\n\t}\r\n\r\n\tfor(i=0;i<n-1;i++)\r\n\t{\r\n          for(j=0;j<n-i-1;j++)\r\n\t\t{\r\n\t\t\tif(len[j+1]<len[j])\r\n\t\t\t{\r\n\t\t\t\tt=len[j];\r\n\t\t\t\tlen[j]=len[j+1];\r\n\t\t\t\tlen[j+1]=t;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t     if(!(strcmp(a[i],a[n])))rand++;\r\n\r\n\t\tif(len[i]<len[n])minco++;\r\n\t}\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tif(len[i]<=len[n])maxco++;\r\n\t}\r\n\tmaxco=maxco-(rand-1);\r\n\r\n\tmin=minco+((minco-1)/k)*5;\r\n\tmax=maxco+((maxco-1)/k)*5;\r\n\r\n\tprintf(""%d %d"",min,max);\r\n}\r\n']",B - Passwords,GNU C11,OK,721
70422002,luogu_bot5,"['#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    char s[101];\r\n    int i,n,ans=0,flag=0,p=0;\r\n    int a[100]={0};\r\n    scanf(""%d%s"",&n,s);\r\n    for(i=0;s[i]!=\'\\0\';i++)\r\n    {\r\n        if(s[i]==\'B\')\r\n        {\r\n            p=1;\r\n            if(flag==1)\r\n            {\r\n                ans++;\r\n                flag=0;\r\n            }\r\n            a[ans]++;\r\n        }\r\n        else\r\n        {\r\n            if(a[ans]>0)\r\n            {\r\n                flag=1;\r\n            }\r\n        }\r\n    }\r\n    if(p==0)\r\n    {\r\n        printf(""0\\n"");\r\n        return 0;\r\n    }\r\n    printf(""%d\\n"",ans+1);\r\n    for(i=0;i<=ans;i++)\r\n    {\r\n        if(a[i]>0)\r\n        {\r\n            printf(""%d "",a[i]);\r\n        }\r\n    }\r\n    return 0;\r\n}']",A - One-dimensional Japanese Crossword,GNU C11,OK,721
70421784,luogu_bot3,"['#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    char s[101];\r\n    int i,n,ans=0,flag=0;\r\n    int a[100]={0};\r\n    scanf(""%d%s"",&n,s);\r\n    for(i=0;s[i]!=\'\\0\';i++)\r\n    {\r\n        if(s[i]==\'B\')\r\n        {\r\n            if(flag==1)\r\n            {\r\n                ans++;\r\n                flag=0;\r\n            }\r\n            a[ans]++;\r\n        }\r\n        else\r\n        {\r\n            if(a[ans]>0)\r\n            {\r\n                flag=1;\r\n            }\r\n        }\r\n    }\r\n    printf(""%d\\n"",ans+1);\r\n    for(i=0;i<=ans;i++)\r\n    {\r\n        if(a[i]>0)\r\n        {\r\n            printf(""%d "",a[i]);\r\n        }\r\n    }\r\n    return 0;\r\n}']",A - One-dimensional Japanese Crossword,GNU C11,WRONG_ANSWER,721
70214495,HamzaElhamel,"['#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n   int n, i, j, g, z[100];\r\n   char x[101];\r\n\r\n   scanf(""%d"", &n);\r\n\r\n   for(i=-1; i<n; i++)\r\n   {\r\n       scanf(""%c"", &x[i]);\r\n   }\r\n   x[i] = \'\\0\';\r\n\r\n   g = -1;\r\n   for(i=0; i<n; i++)\r\n   {\r\n       if(x[i]==\'B\')\r\n       {\r\n           if(x[i]!=x[i-1])\r\n           {\r\n             j=1;\r\n             g++;\r\n           }\r\n         z[g] = j;\r\n         j++;\r\n       }\r\n   }\r\n\r\n   printf(""%d\\n"", g+1);\r\n\r\n   for(i=0; i<=g; i++)\r\n   {\r\n       printf(""%d "", z[i]);\r\n   }\r\n\r\n}']",A - One-dimensional Japanese Crossword,GNU C11,OK,721
69459043,fan987654321,"['#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\nint make(int *,int *);\r\nint sum,num,i,bun,beef,chi,bprice,cprice;\r\n\r\nint main(int argc, char *argv[]) \r\n{\r\n\tint num,i,j=0,count=0,arr1[100];\r\n\tchar ch;\r\n\tscanf(""%d"",&num);\r\n\tfor(i=0;i<num;i++)\r\n\t{\r\n\t\tscanf("" %c"",&ch);\r\n\t\tif(ch==\'W\'&&count!=0)\r\n\t\t{\r\n\t\t\tarr1[j]=count;\r\n\t\t\tcount=0;\r\n\t\t\tj++;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif(ch==\'B\')\r\n\t\t\tcount++;\r\n\t\tif(i==num-1&&count!=0)\r\n\t\t{\r\n\t\t\tarr1[j]=count;\r\n\t\t\tj++;\r\n\t\t}\r\n\t}\r\n\tprintf(""%d\\n"",j);\r\n\tfor(i=0;i<j;i++)\r\n\t\tprintf(""%d "",arr1[i]);\r\n}']",A - One-dimensional Japanese Crossword,GNU C11,OK,721
75719720,pucuk16,[],A - One-dimensional Japanese Crossword,GNU C11,WRONG_ANSWER,721
75720374,pucuk16,"['#include<stdio.h>\nint main(){\n\tint n,ans=0,ls[100],i=0;\n\tchar c;\n\tscanf(""%d\\n"",&n);\n\twhile(n--){\n\t\tscanf(""%c"", &c);\n\t\tif(c==\'B\') ans++;\n\t\tif((c==\'W\'||n==0) && ans>0){\n\t\t\tls[i++]=ans;\n\t\t\tans = 0;\n\t\t}\n\t}printf(""%d\\n"",i);\n\tfor(int j=0;j<i;j++) printf(""%d%c"",ls[j],j==i-1?\'\\n\':\' \');\n\treturn 0;\n}\n']",A - One-dimensional Japanese Crossword,GNU C11,OK,721
77092669,random_from_vmk,"['#include <stdio.h>\n\nint main() \n{\n\tunsigned n, groups_count = 0, b_count;\n\tint c, fl = 0;\n\tscanf(""%u\\n"", &n);\n\tunsigned a[n];\n\n\tfor (unsigned i = 0; i < n; i++) \n\t{\n\t\tc = getchar();\n\t\tif (c == \'B\')\n\t\t{\n\t\t\tif (!fl)\n\t\t\t{\n\t\t\t\tb_count = 1;\n\t\t\t\tfl = 1;\n\t\t\t\tgroups_count++;\n\t\t\t}\n\t\t\telse\n\t\t\t\tb_count++;\n\t\t}\n\t\tif (c == \'W\') \n\t\t{\n\t\t\tif (fl) \n\t\t\t{\n\t\t\t\ta[groups_count-1] = b_count;\n\t\t\t\tfl = 0;\n\t\t\t}\n\t\t}\n\t}\n\tif (fl) \n\t\ta[groups_count-1] = b_count;\n\t\n\tif (groups_count > 0)\n\t{\n\t\tprintf(""%u\\n"", groups_count);\n\t\tfor (unsigned i = 0; i < groups_count-1; i++) \n\t\t{\n\t\t\tprintf(""%u "", a[i]);\n\t\t}\n\t\tprintf(""%u"", a[groups_count-1]);\n\t}\n\telse\n\t\tprintf(""0"");\n\treturn 0;\n}\n']",A - One-dimensional Japanese Crossword,GNU C11,OK,721
79707730,Kafi190041224,"['int n,bc,c,a[1000];int *p1=a,*p2=a;char x;char* s=&x;main(){scanf(""%d%s"",&n,s);while(*s){if(*s==\'B\'){c++;while(*s==\'B\'){bc++;s++;}*p1=bc;bc=0;p1++;}s++;}printf(""%d\\n"",c);while(c--){printf(""%d "",*p2);p2++;}}']",A - One-dimensional Japanese Crossword,GNU C11,OK,721
